# NexusSentinel - Google Cloud Run Environment Variables
# ----------------------------------------
# This file contains environment variables for Google Cloud Run deployment
# Values will be loaded from Secret Manager in production

# Google Cloud Configuration
# ----------------------------------------
GOOGLE_CLOUD_PROJECT=nexussentinel-prod
CLOUD_RUN_SERVICE=nexussentinel-api
REGION=us-central1

# Database Configuration (Cloud SQL)
# ----------------------------------------
DB_HOST=/cloudsql/PROJECT_ID:REGION:INSTANCE_NAME
DB_PORT=5432
DB_USER=nexussentinel
DB_PASSWORD=REPLACE_WITH_SECRET_VALUE
DB_NAME=nexussentinel_prod
DB_SCHEMA=public
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10
DB_ECHO=False

# For Cloud SQL Proxy (local development with cloud database)
# CLOUD_SQL_CONNECTION_NAME=PROJECT_ID:REGION:INSTANCE_NAME

# Database URL (constructed from above)
DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# API Configuration
# ----------------------------------------
API_HOST=0.0.0.0
API_PORT=8080  # Cloud Run requires port 8080
API_WORKERS=4
API_RELOAD=False  # Disable reload in production
API_DEBUG=False  # Disable debug in production
API_TITLE="NexusSentinel API"
API_DESCRIPTION="Stock Market Sentiment Analysis API"
API_VERSION="1.0.0"
API_PREFIX="/api/v1"

# Security Configuration
# ----------------------------------------
# Generate a secure key: openssl rand -hex 32
SECRET_KEY=REPLACE_WITH_SECRET_VALUE
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
# Allowed origins for CORS - update with your frontend domain
CORS_ORIGINS=https://app.nexussentinel.com,https://www.nexussentinel.com

# Rate Limiting
# ----------------------------------------
RATE_LIMIT_ENABLED=True
RATE_LIMIT_DEFAULT=100
RATE_LIMIT_PERIOD_SECONDS=60

# Logging Configuration
# ----------------------------------------
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/tmp/nexussentinel.log  # Cloud Run uses ephemeral filesystem

# Environment
# ----------------------------------------
ENVIRONMENT=production

# External Services
# ----------------------------------------
SENTIMENT_API_KEY=REPLACE_WITH_SECRET_VALUE
MARKET_DATA_API_URL=https://api.example.com/market-data
MARKET_DATA_API_KEY=REPLACE_WITH_SECRET_VALUE

# FinBERT / FinGPT Configuration
# ----------------------------------------
# Endpoint & authentication for primary financial-domain sentiment service
# Switch providers by changing FINBERT_PROVIDER (finbrain | fingpt | custom)
FINBERT_API_KEY=REPLACE_WITH_SECRET_VALUE
FINBERT_API_URL=https://api.finbrain.tech/v1/sentiment
FINBERT_PROVIDER=finbrain
FINBERT_TIMEOUT_SECONDS=10
# Auth method can be: api-key, bearer, or custom
FINBERT_AUTH_METHOD=api-key
FINBERT_AUTH_HEADER=X-API-KEY
FINBERT_LABEL_FIELD=sentiment
FINBERT_CONFIDENCE_FIELD=confidence
FINBERT_POSITIVE_LABEL=positive
FINBERT_NEUTRAL_LABEL=neutral
FINBERT_NEGATIVE_LABEL=negative

# OpenAI Configuration
# ----------------------------------------
# Fallback LLM for sentiment analysis & entity extraction
OPENAI_API_KEY=REPLACE_WITH_SECRET_VALUE
# Prefer gpt-4o; backend will fallback to gpt-4 automatically if unavailable
OPENAI_MODEL=gpt-4o
OPENAI_FALLBACK_MODEL=gpt-4
OPENAI_MAX_TOKENS=500
OPENAI_TEMPERATURE=0.1

# Sentiment Service Behaviour
# ----------------------------------------
# Default provider and confidence threshold for fallback logic
SENTIMENT_ANALYZER_PROVIDER=finbert
SENTIMENT_CONFIDENCE_THRESHOLD=0.6
# Enable storing analysis history (background task)
ENABLE_SENTIMENT_HISTORY=True

# Feature Flags
# ----------------------------------------
ENABLE_SENTIMENT_ANALYSIS=True
ENABLE_TECHNICAL_INDICATORS=True
ENABLE_SOCIAL_MEDIA_TRACKING=True
ENABLE_NEWS_TRACKING=True

# Google Cloud Services Integration
# ----------------------------------------
# Uncomment and configure as needed
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
# PUBSUB_TOPIC=projects/PROJECT_ID/topics/TOPIC_NAME
# CLOUD_STORAGE_BUCKET=nexussentinel-data
